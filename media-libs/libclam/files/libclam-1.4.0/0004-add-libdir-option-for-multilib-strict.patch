From 328af5da12e8e9df861d4c35ca9acd8f18797ad5 Mon Sep 17 00:00:00 2001
From: "Gavin Pryke (gavlee)" <gavinlee303@googlemail.com>
Date: Thu, 14 Mar 2013 17:01:27 +0000
Subject: [PATCH 4/6] add libdir option for multilib-strict

---
 SConstruct                       |  1 +
 scons/libs/clam_build_helpers.py |  5 +++--
 scons/sconstools/clam.py         | 25 ++++++++++++++++++-------
 scons/sconstools/pc.py           |  5 +++--
 4 files changed, 25 insertions(+), 11 deletions(-)

diff --git a/SConstruct b/SConstruct
index f762227..0c9bb92 100644
--- a/SConstruct
+++ b/SConstruct
@@ -124,6 +124,7 @@ def setup_build_options( env ) :
 	# global options
 	opts.Add( PathVariable( 'prefix', 'Install location for CLAM', '/usr/local'))
 	opts.Add( PathVariable( 'prefix_for_packaging', 'Install location when packaging (just for .deb creation)', '.', PathVariable.PathIsDirCreate))
+	opts.Add( PathVariable( 'libdir', 'library install directory', 'lib', PathVariable.PathAccept))
 	if isWindowsPlatform :
 		opts.Add( PathVariable( 'sandbox_path', 'The working directory in mingw where the external libraries are placed', '' ) )
 	opts.Add( BoolVariable( 'release', 'Build CLAM with optimizations and stripping debug symbols', 'no'))
diff --git a/scons/libs/clam_build_helpers.py b/scons/libs/clam_build_helpers.py
index efa85b7..750b610 100644
--- a/scons/libs/clam_build_helpers.py
+++ b/scons/libs/clam_build_helpers.py
@@ -110,8 +110,8 @@ class InstallDirs :
 		if environ['prefix_for_packaging'] != '.':
 			self.prefix = environ['prefix_for_packaging'] 
 		else: self.prefix = environ['prefix']
-		self.lib  = self.prefix + '/lib'
-		self.pc   = self.prefix + '/lib/pkgconfig'
+		self.lib  = os.path.join(self.prefix, environ['libdir'])
+		self.pc   = os.path.join(self.prefix, environ['libdir'], 'pkgconfig')
 		self.bin  = self.prefix + '/bin'
 		self.inc  = self.prefix + '/include'
 		self.data = self.prefix + '/share'
@@ -206,6 +206,7 @@ def lib_rules(name, version, folders, blacklist, install_dirs, env, moduleDepend
 		package = "clam_%s"%name,
 		version = version,
 		prefix = env['prefix'],
+                libdir = env['libdir'],
 		description = "C++ Framework for analysis, synthesis and transformation of music audio signals",
 		url = 'http://clam-project.org',
 		requires = ["clam_%s"%module for module in moduleDependencies],
diff --git a/scons/sconstools/clam.py b/scons/sconstools/clam.py
index b14299e..4e78e8e 100644
--- a/scons/sconstools/clam.py
+++ b/scons/sconstools/clam.py
@@ -66,11 +66,18 @@ def ClamModule(env, moduleName, version,
 	if windowsTarget :
 		plugin = [plugin[0]]
 
+	# hack for multilib
+	if env['libdir']:
+		libdir = env['libdir']
+	elif not env['libdir']:
+		libdir = 'lib'
+	
 	# pkg-config file
 	pcfile = env.PkgConfigFile(
 		package = libraryName,
 		version = version,
-		prefix = env['prefix'],
+                prefix = env['prefix'],
+		libdir = libdir,
 		description = description,
 		url = url,
 		requires = clamDependencies+otherDependencies,
@@ -126,10 +133,10 @@ def ClamModule(env, moduleName, version,
 		localLinkName = env.LinkerNameLink( linkname, lib ) # lib***.dylib     -> lib***.X.Y.Z.dylib
 		libraries = [lib, localSoName, localLinkName]
 
-	installedLib = env.Install(os.path.join(env['prefix'],'lib'), lib)
+	installedLib = env.Install(os.path.join(env['prefix'], libdir), lib)
 	install+= [
-		env.Install(os.path.join(env['prefix'],'lib','clam'), plugin),
-		env.Install(os.path.join(env['prefix'],'lib','pkgconfig'), pcfile),
+		env.Install(os.path.join(env['prefix'], libdir, 'clam'), plugin),
+		env.Install(os.path.join(env['prefix'], libdir, 'pkgconfig'), pcfile),
 		env.Install(os.path.join(env['prefix'],'include','CLAM',moduleName), headers),
 		installedLib,
 		]
@@ -137,8 +144,8 @@ def ClamModule(env, moduleName, version,
 		return install, (libraries, plugin, pcfile)
 
 	install+= [
-		env.LinkerNameLink( os.path.join(env['prefix'],'lib',linkname), installedLib),
-		env.SonameLink( os.path.join(env['prefix'],'lib',soname), installedLib),
+		env.LinkerNameLink( os.path.join(env['prefix'], libdir, linkname), installedLib),
+		env.SonameLink( os.path.join(env['prefix'], libdir, soname), installedLib),
 		]
 	return install, (libraries, plugin, pcfile)
 
@@ -160,9 +167,13 @@ def ClamQuietCompilation(env) :
 
 def enable_modules( self, libs, path) :
 	if sys.platform in ['linux2','darwin'] : 
-		self.ParseConfig('PKG_CONFIG_PATH=%s/lib/pkgconfig pkg-config %s --libs --cflags'%
+		# multilib hack
+		libdir= getattr(self['ENV'], 'libdir', 'lib')
+
+		self.ParseConfig('PKG_CONFIG_PATH=%s/%s/pkgconfig pkg-config %s --libs --cflags'%
 			(
 				path,
+				libdir,
 				' '.join(libs)))
 		return
 
diff --git a/scons/sconstools/pc.py b/scons/sconstools/pc.py
index 8a7e41c..262caaf 100644
--- a/scons/sconstools/pc.py
+++ b/scons/sconstools/pc.py
@@ -3,7 +3,7 @@ import os
 pkgConfigTemplate = """\
 name = @name@
 prefix = @prefix@
-libdir = ${prefix}/lib
+libdir = ${prefix}/@libdir@
 includedir = ${prefix}/include
 
 Name: ${name}
@@ -15,12 +15,13 @@ Conflicts: @conflicts@
 Libs: -L${libdir} -l${name} @libs@
 Cflags: -I${includedir} @cflags@
 """
-def PkgConfigFile(env, package, version, prefix, description=None, url=None, requires=[], conflicts=[], cflags=[], libs=[]) :
+def PkgConfigFile(env, package, version, prefix, libdir='lib', description=None, url=None, requires=[], conflicts=[], cflags=[], libs=[]) :
 	return env.Textfile(target = package,
 		source = [env.Value(pkgConfigTemplate)],
 		TEXTFILESUFFIX='.pc',
 		SUBST_DICT=[
 			('@prefix@', prefix ),
+			('@libdir@', libdir ),
 			('@name@', package ),
 			('@version@', version ),
 			('@description@', "C++ Framework for analysis, synthesis and transformation of music audio signals" ),
-- 
1.7.12.4


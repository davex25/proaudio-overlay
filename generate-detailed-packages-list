#!/bin/bash
# (c) 2006 - 2007 Frieder BÃ¼rzele
# licence gnu gpl v2
# this script includes some smaller scripts which cleans the repository a bit
# and remove unneeded files

# generate detailed_package_list (00-DETAILED-PACKAGES-LIST)

# exit script it not executed in overlay root
if [ ! -e  .svn/text-base/generate-detailed-packages-list.svn-base ] ;then
	echo "please execute this script just inside the overlay root"
	exit 1
fi

generate_list(){
	for x in `find -maxdepth 1 -type d -printf '%f\n'|sed '1d'|sort|uniq`;do
	cd $x
	for i in `find -name files`;do
		i=${i/\/files/}
		ebuilds="$(ls $i/*.ebuild)"
		i=${i/.\//}
	
		echo "#------- $x/$i --------"
		nr_of_ebuilds="-1"
		
		# reset descriptions so if one's is missing we'll see it
		# in the generated list
		HOMEPAGE="unknown"
		DESCRIPTION="unknown"
		KEYWORDS="unknown"
		for k in ${ebuilds[@]};do
			
			source $k &>/dev/null
			k="${k##*/}"
			k=${k/\.ebuild/}
			[ "${#KEYWORDS}" -le "0" ] && KEYWORDS="-> live ebuild: [svn|cvs|...]<-"
			echo -e "\t${k/.\//}\tarch: ${KEYWORDS}"
			nr_of_ebuilds=$(($nr_of_ebuilds + 1))
		done
		# read ebuild infos
		## no longer needed as it is read in above loop
		#source  ${ebuilds[$nr_of_ebuilds]} &>/dev/null
		
		# remove line breaks in the ebuild var
		# if you want to fix the ebuild comment next line and check output with grep '[^ ]'
		DESCRIPTION="$(echo ${DESCRIPTION})"
		desc_length=${#DESCRIPTION}
		start_pnt=0
		max_line_length=40
		tmp_descr=""
		cut_size="0"
		old_begin="0"
		from_begin=$max_line_length
		if [ "$desc_length" -gt "$max_line_length" ];then
			 while [ "$from_begin" -le "$desc_length" ];do #
				while [ "${DESCRIPTION:$from_begin:1}" != " " ] && [ "$from_begin" -lt "$desc_length" ];do
					from_begin=$(( $from_begin + 1 ))
				done
				cut_size=$(( $from_begin - $old_begin))
				tmp_descr="${tmp_descr}${DESCRIPTION:$start_pnt:$cut_size}\n\t\t"

				sucker=$(( $start_pnt + $cut_size))
				old_begin=$from_begin
				start_pnt=$(( $start_pnt + $cut_size ))
				from_begin=$(( $from_begin + $cut_size ))
			done
			remain_desc=${DESCRIPTION:$sucker}
			DESCRIPTION="${tmp_descr}${remain_desc}"
		fi
		#echo -e "\n\tTested/Working arch: ${KEYWORDS}\n"
		echo -e "\tDescription: ${DESCRIPTION}"
		echo -e "\tHomepage:    ${HOMEPAGE}"
		echo -e "\n"
	done
	cd - &>/dev/null
	done
}
if [ "${#@}" != "0" ];then
	generate_list  
else
	echo 00-DETAILED-PACKAGES-LIST will be created
	generate_list > 00-DETAILED-PACKAGES-LIST
fi

diff -Naur seq24-0.8.7/src/mainwnd.cpp seq24-0.8.7-sam/src/mainwnd.cpp
--- seq24-0.8.7/src/mainwnd.cpp	2006-08-13 16:44:32.000000000 -0400
+++ seq24-0.8.7-sam/src/mainwnd.cpp	2007-05-29 10:18:58.000000000 -0400
@@ -198,6 +198,7 @@
 void 
 mainwnd::start_playing( void )
 {
+    global_jack_start_mode = false;  // set live mode
     m_mainperf->position_jack( false );  
     m_mainperf->start( false );
     m_mainperf->start_jack( );
diff -Naur seq24-0.8.7/src/perfedit.cpp seq24-0.8.7-sam/src/perfedit.cpp
--- seq24-0.8.7/src/perfedit.cpp	2006-08-13 16:58:37.000000000 -0400
+++ seq24-0.8.7-sam/src/perfedit.cpp	2007-05-29 10:18:58.000000000 -0400
@@ -251,6 +251,15 @@
 bool 
 perfedit::on_key_press_event(GdkEventKey* a_ev)
 {
+    if ( a_ev->state & GDK_CONTROL_MASK )
+    {
+        /* Ctrl-Z: Undo */
+        if ( a_ev->keyval == GDK_z || a_ev->keyval == GDK_Z )
+        {
+            undo();
+            return true;
+        }
+    }
     if ( a_ev->type == GDK_KEY_PRESS ){
 
         if ( global_print_keys ){
@@ -267,6 +276,7 @@
             stop_playing();
             return true;
         }
+
     }
 
     return false;
@@ -282,6 +292,7 @@
 void 
 perfedit::start_playing( void )
 {
+    global_jack_start_mode = true;  // set song mode
     m_mainperf->position_jack( true );
     m_mainperf->start_jack( );
     m_mainperf->start( true );
diff -Naur seq24-0.8.7/src/seqedit.cpp seq24-0.8.7-sam/src/seqedit.cpp
--- seq24-0.8.7/src/seqedit.cpp	2006-05-30 10:04:52.000000000 -0400
+++ seq24-0.8.7-sam/src/seqedit.cpp	2007-05-29 10:18:58.000000000 -0400
@@ -43,6 +43,8 @@
 #include "menu_full.xpm"
 #include "sequences.xpm"
 #include "tools.xpm"
+#include "play2.xpm"
+#include "stop.xpm"
 
 int seqedit::m_initial_zoom = 2;
 int seqedit::m_initial_snap = c_ppqn / 4;
@@ -127,6 +129,8 @@
                                            m_seqdata_wid,
                                            m_hadjust));
     
+    m_toggle_play = manage( new ToggleButton() );
+
     m_seqroll_wid  = manage( new seqroll(  m_mainperf,
                                            m_seq,
                                            m_zoom,
@@ -136,7 +140,8 @@
                                            m_seqkeys_wid,
                                            m_pos,
                                            m_hadjust,
-                                           m_vadjust ));
+                                           m_vadjust,
+                                           m_toggle_play));
     
 
     
@@ -201,8 +206,18 @@
     /* exapand, cause rollview expands */
     m_vbox->pack_start(*m_table, true, true, 0);
 
+    /* Stop and play buttons */
+    m_button_stop = manage( new Button( ));
+    m_button_stop->add( *manage( new Image(Gdk::Pixbuf::create_from_xpm_data( stop_xpm ))));
+    m_button_stop->signal_clicked().connect( mem_fun(*this,&seqedit::stop_playing));
+    dhbox->pack_start(*m_button_stop, false, false);
+
+    m_button_play = manage( new Button() );
+    m_button_play->add( *manage( new Image(Gdk::Pixbuf::create_from_xpm_data( play2_xpm  ))));
+    m_button_play->signal_clicked().connect(  mem_fun( *this, &seqedit::start_playing));
+    dhbox->pack_start(*m_button_play, false, false);
 
-
+    dhbox->pack_start( *(manage(new VSeparator( ))), false, false, 4);
 
     /* data button */
     m_button_data = manage( new Button( " Event " ));
@@ -216,7 +231,7 @@
     dhbox->pack_start( *m_entry_data, true, true );
 
     /* play, rec, thru */
-    m_toggle_play = manage( new ToggleButton() );
+    //m_toggle_play = manage( new ToggleButton() );
     m_toggle_play->add(  *manage( new Image(Gdk::Pixbuf::create_from_xpm_data( play_xpm ))));
     m_toggle_play->signal_clicked().connect( mem_fun( *this, &seqedit::play_change_callback));
     m_tooltips->set_tip( *m_toggle_play, "Sequence dumps data to midi bus." );
@@ -234,10 +249,12 @@
     m_toggle_play->set_active( m_seq->get_playing());
     m_toggle_record->set_active( m_seq->get_recording());
     m_toggle_thru->set_active( m_seq->get_thru());
- 
-    dhbox->pack_end( *m_toggle_record, false, false, 4);
-    dhbox->pack_end( *m_toggle_thru, false, false, 4);
-    dhbox->pack_end( *m_toggle_play, false, false, 4);
+
+    dhbox->pack_end( *m_toggle_record, false, false);
+    dhbox->pack_end( *m_toggle_thru, false, false);
+    dhbox->pack_end( *m_toggle_play, false, false);
+
+
     dhbox->pack_end( *(manage(new VSeparator( ))), false, false, 4);
 
     fill_top_bar();
@@ -270,6 +287,9 @@
     set_key( m_key );
     set_key( m_key );
 
+    /* Put focus on the seqroll widget, so the start and stop keyboard shortcuts will work when the window first pops up. */
+    m_seqroll_wid->grab_focus();
+
 }
 
 
@@ -1337,3 +1357,16 @@
     
     return false;
 }
+
+
+void 
+seqedit::start_playing( void )
+{
+    m_seqroll_wid->start_playing();
+}
+
+void 
+seqedit::stop_playing( void )
+{
+    m_seqroll_wid->stop_playing();
+}
diff -Naur seq24-0.8.7/src/seqedit.h seq24-0.8.7-sam/src/seqedit.h
--- seq24-0.8.7/src/seqedit.h	2006-05-30 02:24:11.000000000 -0400
+++ seq24-0.8.7-sam/src/seqedit.h	2007-05-29 10:18:58.000000000 -0400
@@ -161,6 +161,9 @@
     Button      *m_button_bw;
     Entry       *m_entry_bw;
 
+    Button      *m_button_stop;
+    Button      *m_button_play;
+
     ToggleButton *m_toggle_play;
     ToggleButton *m_toggle_record;
     ToggleButton *m_toggle_thru;
@@ -250,6 +253,9 @@
 
     void mouse_action( mouse_action_e a_action );
 
+    void start_playing();
+    void stop_playing();
+
  public:
 
     seqedit( sequence *a_seq, 
@@ -259,10 +265,8 @@
 
     ~seqedit(  );
 
- 
-
     bool on_delete_event(GdkEventAny *a_event);
-    
+
 };
 
 
diff -Naur seq24-0.8.7/src/seqevent.cpp seq24-0.8.7-sam/src/seqevent.cpp
--- seq24-0.8.7/src/seqevent.cpp	2006-05-29 01:19:55.000000000 -0400
+++ seq24-0.8.7-sam/src/seqevent.cpp	2007-05-29 11:36:34.000000000 -0400
@@ -584,6 +584,7 @@
     long tick_s;
     long tick_f;
     long tick_w;
+    bool check_for_unselect = true;
 
     convert_x( c_eventevent_x, &tick_w  );
 
@@ -662,49 +663,57 @@
                     }
                     else
                     {
+                        check_for_unselect = false;
                         /// needs update
                     }
                 }
 
                 if ( m_seq->select_events( tick_s, tick_f,
                             m_status, m_cc, sequence::e_is_selected ))
-                {
 
-                    m_moving_init = true;
-                    int note;
+                {
+                    if ( check_for_unselect && (a_ev->state & GDK_CONTROL_MASK) )
+                    {
+                        m_seq->select_events( tick_s, tick_f,
+                            m_status, m_cc, sequence::e_unselect_one );
+                    } else 
+                    {
+                        m_moving_init = true;
+                        int note;
 
-                    /* get the box that selected elements are in */
-                    m_seq->get_selected_box( &tick_s, &note, 
-                            &tick_f, &note );
+                        /* get the box that selected elements are in */
+                        m_seq->get_selected_box( &tick_s, &note, 
+                                &tick_f, &note );
 
-                    tick_f += tick_w;
+                        tick_f += tick_w;
 
-                    /* convert box to X,Y values */
-                    convert_t( tick_s, &x );
-                    convert_t( tick_f, &w );
+                        /* convert box to X,Y values */
+                        convert_t( tick_s, &x );
+                        convert_t( tick_f, &w );
 
-                    /* w is actually corrids now, so we have to change */
-                    w = w-x; 
+                        /* w is actually corrids now, so we have to change */
+                        w = w-x; 
 
-                    /* set the m_selected rectangle to hold the
-                       x,y,w,h of our selected events */
+                        /* set the m_selected rectangle to hold the
+                           x,y,w,h of our selected events */
 
-                    m_selected.x = x;                  
-                    m_selected.width=w;
+                        m_selected.x = x;                  
+                        m_selected.width=w;
 
-                    m_selected.y = (c_eventarea_y - c_eventevent_y)/2;
-                    m_selected.height = c_eventevent_y;
+                        m_selected.y = (c_eventarea_y - c_eventevent_y)/2;
+                        m_selected.height = c_eventevent_y;
 
 
-                    /* save offset that we get from the snap above */
-                    int adjusted_selected_x = m_selected.x;
-                    snap_x( &adjusted_selected_x );
-                    m_move_snap_offset_x = ( m_selected.x - adjusted_selected_x);
+                        /* save offset that we get from the snap above */
+                        int adjusted_selected_x = m_selected.x;
+                        snap_x( &adjusted_selected_x );
+                        m_move_snap_offset_x = ( m_selected.x - adjusted_selected_x);
 
-                    /* align selection for drawing */
-                    snap_x( &m_selected.x );
-                    snap_x( &m_current_x );
-                    snap_x( &m_drop_x );
+                        /* align selection for drawing */
+                        snap_x( &m_selected.x );
+                        snap_x( &m_current_x );
+                        snap_x( &m_drop_x );
+                    }
 
                 } 
             }
@@ -957,3 +966,4 @@
 
         return false;
 }
+
diff -Naur seq24-0.8.7/src/seqroll.cpp seq24-0.8.7-sam/src/seqroll.cpp
--- seq24-0.8.7/src/seqroll.cpp	2006-05-29 00:58:37.000000000 -0400
+++ seq24-0.8.7-sam/src/seqroll.cpp	2007-05-29 11:34:07.000000000 -0400
@@ -30,7 +30,8 @@
                  seqkeys *a_seqkeys_wid,
                  int a_pos, 
                  Adjustment *a_hadjust,
-                 Adjustment *a_vadjust )
+                 Adjustment *a_vadjust,
+                 ToggleButton *a_toggle_play)
 : DrawingArea() 
 {    
     using namespace Menu_Helpers;
@@ -57,6 +58,7 @@
     m_seqevent_wid = a_seqevent_wid;
     m_seqkeys_wid = a_seqkeys_wid;
     m_pos = a_pos;
+    m_toggle_play = a_toggle_play;
 
     m_clipboard = new sequence( );
 
@@ -117,6 +119,7 @@
 seqroll::~seqroll( )
 {
 	delete m_clipboard;
+    //delete m_toggle_play; // FIXME?
 }
 
 /* popup menu calls this */
@@ -863,6 +866,7 @@
     grab_focus(  );
 
     bool needs_update = false;
+    bool check_for_unselect = true;
 	
     snapped_x = norm_x = (int) (a_ev->x + m_scroll_offset_x );
     snapped_y = norm_y = (int) (a_ev->y + m_scroll_offset_y );
@@ -937,7 +941,6 @@
                     {
                         m_seq->unselect();	    
                     }
- 
 
                     /* on direct click select only one event */
                     numsel = m_seq->select_note_events( tick_s,note_h,tick_s,note_h, 
@@ -952,6 +955,7 @@
                     else
                     {
                         needs_update = true;
+                        check_for_unselect = false;
                     }
                 }
  
@@ -962,30 +966,38 @@
                 {
                     if ( a_ev->button == 1 )
                     {
-                        m_moving_init = true;
                         needs_update = true;
 
+                        if(check_for_unselect && (a_ev->state & GDK_CONTROL_MASK))
+                        {
+                            /* on direct click unselect one event */
+                            m_seq->select_note_events( tick_s,note_h,tick_s,note_h, sequence::e_unselect_one );
+                        }
+                        else
+                        {
+                            m_moving_init = true;
 
-                        /* get the box that selected elements are in */
-                        m_seq->get_selected_box( &tick_s, &note_h, 
-                                &tick_f, &note_l );
+                            /* get the box that selected elements are in */
+                            m_seq->get_selected_box( &tick_s, &note_h, 
+                                    &tick_f, &note_l );
 
 
-                        convert_tn_box_to_rect( tick_s, tick_f, note_h, note_l,
-                                &m_selected.x,
-                                &m_selected.y,
-                                &m_selected.width,
-                                &m_selected.height );
-
-                        /* save offset that we get from the snap above */
-                        int adjusted_selected_x = m_selected.x;
-                        snap_x( &adjusted_selected_x );
-                        m_move_snap_offset_x = ( m_selected.x - adjusted_selected_x);
+                            convert_tn_box_to_rect( tick_s, tick_f, note_h, note_l,
+                                    &m_selected.x,
+                                    &m_selected.y,
+                                    &m_selected.width,
+                                    &m_selected.height );
+
+                            /* save offset that we get from the snap above */
+                            int adjusted_selected_x = m_selected.x;
+                            snap_x( &adjusted_selected_x );
+                            m_move_snap_offset_x = ( m_selected.x - adjusted_selected_x);
 
-                        /* align selection for drawing */
-                        snap_x( &m_selected.x );
+                            /* align selection for drawing */
+                            snap_x( &m_selected.x );
 
-                        m_current_x = m_drop_x = snapped_x;
+                            m_current_x = m_drop_x = snapped_x;
+                        }
                     }
 
                     /* middle mouse button  */
@@ -1251,6 +1263,18 @@
 
     if ( a_p0->type == GDK_KEY_PRESS ){
 
+        if ( a_p0->keyval == m_perform->m_key_start )
+        {
+            start_playing();
+            return true;
+        }
+
+        if ( a_p0->keyval == m_perform->m_key_stop )
+        {
+            stop_playing();
+            return true;
+        }
+
         if ( a_p0->keyval ==  GDK_Delete ){
 
             m_seq->push_undo();
@@ -1345,3 +1369,21 @@
 
 }
 
+
+void
+seqroll::start_playing( void )
+{
+    global_jack_start_mode = false;  // set live mode
+    m_seq->set_playing( true );
+    m_toggle_play->set_active( true );
+    m_perform->position_jack( false );
+    m_perform->start( false );
+    m_perform->start_jack( );
+}
+
+void
+seqroll::stop_playing( void )
+{
+    m_perform->stop_jack();
+    m_perform->stop();
+}
diff -Naur seq24-0.8.7/src/seqroll.h seq24-0.8.7-sam/src/seqroll.h
--- seq24-0.8.7/src/seqroll.h	2006-05-26 00:00:39.000000000 -0400
+++ seq24-0.8.7-sam/src/seqroll.h	2007-05-29 10:18:58.000000000 -0400
@@ -76,6 +76,8 @@
     seqevent     *m_seqevent_wid;
     seqkeys      *m_seqkeys_wid;
 
+    ToggleButton *m_toggle_play;
+
     int m_pos;
 
     /* one pixel == m_zoom ticks */
@@ -168,8 +170,6 @@
 
     void force_draw( void );
 
-
-
  public:
 
     void reset();
@@ -202,11 +202,16 @@
              seqkeys *a_seqkeys_wid, 
              int a_pos, 
              Adjustment *a_hadjust,
-             Adjustment *a_vadjust );
+             Adjustment *a_vadjust,
+             ToggleButton *a_toggle_play);
 
 	void set_data_type( unsigned char a_status, unsigned char a_control  );
  
     ~seqroll( );
+
+    void start_playing( void );
+
+    void stop_playing( void );
 };
 
 #endif
diff -Naur seq24-0.8.7/src/sequence.cpp seq24-0.8.7-sam/src/sequence.cpp
--- seq24-0.8.7/src/sequence.cpp	2006-05-29 21:44:51.000000000 -0400
+++ seq24-0.8.7-sam/src/sequence.cpp	2007-05-29 10:18:58.000000000 -0400
@@ -787,6 +787,13 @@
                         ret = 1;
                         break;
                     }
+                    if ( a_action == e_unselect_one )
+                    {
+                        (*i).unselect( );
+                        ev->unselect( );
+                        ret++;
+                        break;
+                    }
                 }
             }
         }
@@ -820,6 +827,12 @@
                 ret = 1;
                 break;
             }
+            if ( a_action == e_unselect_one )
+            {
+                (*i).unselect( );
+                ret++;
+                break;
+            }
         }
     }
 
@@ -875,6 +888,12 @@
                     ret = 1;
                     break;
                 }
+                if ( a_action == e_unselect_one )
+                {
+                    (*i).unselect( );
+                    ret++;
+                    break;
+                }
             }
         }
     }
diff -Naur seq24-0.8.7/src/sequence.h seq24-0.8.7-sam/src/sequence.h
--- seq24-0.8.7/src/sequence.h	2006-05-29 00:17:06.000000000 -0400
+++ seq24-0.8.7-sam/src/sequence.h	2007-05-29 10:18:58.000000000 -0400
@@ -318,7 +318,8 @@
         e_select,
         e_select_one,
         e_is_selected,
-        e_would_select
+        e_would_select,
+        e_unselect_one
     };
     
     /* select note events in range, returns number

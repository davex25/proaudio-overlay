Seulement dans radium-1.9.2/audio: faust_multibandcomp_noselect.cpp
diff -ru radium-1.9.2/audio/Ladspa_plugins.cpp radium-master/audio/Ladspa_plugins.cpp
--- radium-1.9.2/audio/Ladspa_plugins.cpp	2012-11-12 16:08:58.000000000 +0100
+++ radium-master/audio/Ladspa_plugins.cpp	2012-11-14 10:07:22.000000000 +0100
@@ -854,7 +854,7 @@
 #endif
 
 #if defined(FOR_WINDOWS) || defined(FOR_MACOSX)
-  sprintf(ladspa_path,"%s",QSring(QString(OS_get_program_path()) + OS_get_directory_separator() + "ladspa").ascii());
+  sprintf(ladspa_path,"%s",QString(QString(OS_get_program_path()) + OS_get_directory_separator() + "ladspa").ascii());
 #endif
 
   char *dirname = strtok (ladspa_path, ":");
diff -ru radium-1.9.2/audio/Sampler_plugin.c radium-master/audio/Sampler_plugin.c
--- radium-1.9.2/audio/Sampler_plugin.c	2012-11-12 16:08:58.000000000 +0100
+++ radium-master/audio/Sampler_plugin.c	2012-11-14 10:07:22.000000000 +0100
@@ -1102,7 +1102,6 @@
  get_effect_format        : NULL,
  get_effect_num           : get_effect_num,
  get_effect_name          : get_effect_name,
- get_display_value_string : NULL,
  effect_is_RT             : NULL,
  create_plugin_data       : create_plugin_data,
  cleanup_plugin_data      : cleanup_plugin_data,
diff -ru radium-1.9.2/audio/SoundPlugin.c radium-master/audio/SoundPlugin.c
--- radium-1.9.2/audio/SoundPlugin.c	2012-11-12 16:08:58.000000000 +0100
+++ radium-master/audio/SoundPlugin.c	2012-11-14 10:07:22.000000000 +0100
@@ -996,3 +996,8 @@
   for(i=0;i<type->num_effects;i++)
     PLUGIN_set_effect_value(plugin, 0, i, plugin->initial_effect_values[i], PLUGIN_STORED_TYPE, PLUGIN_STORE_VALUE);
 }
+
+void PLUGIN_reset_one_effect(SoundPlugin *plugin, int effect_num){
+  Undo_AudioEffect_CurrPos(plugin->patch, effect_num);
+  PLUGIN_set_effect_value(plugin, 0, effect_num, plugin->initial_effect_values[effect_num], PLUGIN_STORED_TYPE, PLUGIN_STORE_VALUE);
+}
diff -ru radium-1.9.2/audio/SoundPlugin_proc.h radium-master/audio/SoundPlugin_proc.h
--- radium-1.9.2/audio/SoundPlugin_proc.h	2012-11-12 16:08:58.000000000 +0100
+++ radium-master/audio/SoundPlugin_proc.h	2012-11-14 10:07:22.000000000 +0100
@@ -52,5 +52,6 @@
 extern LANGSPEC SoundPlugin *PLUGIN_create_from_state(hash_t *state);
 
 extern LANGSPEC void PLUGIN_reset(SoundPlugin *plugin);
+extern LANGSPEC void PLUGIN_reset_one_effect(SoundPlugin *plugin, int effect_num);
 
 #endif // AUDIO_SOUNDPLUGIN_PROC_H
diff -ru radium-1.9.2/audio/VST_plugins.cpp radium-master/audio/VST_plugins.cpp
--- radium-1.9.2/audio/VST_plugins.cpp	2012-11-12 16:08:58.000000000 +0100
+++ radium-master/audio/VST_plugins.cpp	2012-11-14 10:07:22.000000000 +0100
@@ -23,6 +23,13 @@
 // http://code.breakfastquay.com/projects/dssi-vst/repository/entry/dssi-vst-server.cpp
 
 
+#if defined(FOR_MACOSX)
+#  import <Carbon/Carbon.h>
+#  undef EVENT_H
+// 
+#endif
+
+
 #include <stdlib.h>
 #include <string.h>
 #include <stdio.h>
@@ -32,7 +39,7 @@
 
 #include <vector>
 
-#if defined(USE_VESTIGE)
+#if USE_VESTIGE
 
 #  include "vestige/aeffectx.h"
 
@@ -51,15 +58,18 @@
 
 const int kVstMaxParamStrLen = 8;
 
-#else //  defined(USE_VESTIGE)
+#else //  USE_VESTIGE
 
 // If this fails, and you don't bother downloading and installing vstsdk from steinberg, set USE_VESTIGE to 1 in the Makefile!
 
 #  define VST_FORCE_DEPRECATED 0
 #  include <vstsdk2.4/pluginterfaces/vst2.x/aeffectx.h>
 
-#endif //  defined(USE_VESTIGE)
+#endif //  USE_VESTIGE
 
+#include <QMacNativeWidget>
+#include <QApplication>
+#include <QBoxLayout>
 
 #include <QWidget>
 #include <QLibrary>
@@ -70,6 +80,7 @@
 #include <QSlider>
 
 #include "../common/nsmtracker.h"
+#include "../common/visual_proc.h"
 #include "../common/OS_visual_input.h"
 #include "../common/settings_proc.h"
 
@@ -104,8 +115,8 @@
     AEffect *aeffect;
     EditorWidget *editor_widget;
     float sample_rate;
-    struct VstEvents *events;
-    struct VstMidiEvent midi_events[MAX_EVENTS];
+    VstEvents *events;
+    VstMidiEvent midi_events[MAX_EVENTS];
   };
   
   struct TypeDataParam{
@@ -178,7 +189,7 @@
 
 	// Constructor.
 	EditorWidget(QWidget *pParent, Qt::WindowFlags wflags = 0)
-		: QWidget(pParent, wflags),
+	  : QWidget(pParent, wflags),
                   _is_open(false),
 	#if defined(Q_WS_X11)
 		m_pDisplay(QX11Info::display()),
@@ -196,13 +207,6 @@
 	{
                 _effect = effect;
 		
-		// Start the proper (child) editor...
-		long  value = 0;
-		void *ptr = (void *) winId();
-	#if defined(Q_WS_X11)
-		value = (long) m_pDisplay;
-	#endif
-
 		// Make it the right size
 		struct ERect {
 			short top;
@@ -212,19 +216,42 @@
 		} *pRect;
 
                 if (effect->dispatcher(effect, effEditGetRect, 0, 0, &pRect, 0.0f)) {
+#if !defined(FOR_MACOSX)
 			int w = pRect->right - pRect->left;
 			int h = pRect->bottom - pRect->top;
 			if (w > 0 && h > 0)
 				QWidget::setFixedSize(w, h);
+#endif
 		}
 
-                _effect->dispatcher(_effect, effEditOpen, 0, value, ptr, 0.0f);
+#if defined(FOR_WINDOWS)
+		void *ptr = (void *) winId();
+                _effect->dispatcher(_effect, effEditOpen, 0, 0, ptr, 0.0f);
+#endif
+
+#if defined(FOR_MACOSX)
+
+		Rect contentRect = {pRect->top+100, pRect->left+100, pRect->bottom+100, pRect->right+100};
+		//SetRect(&contentRect, 200, 200, 400, 400);
+		HIWindowRef windowRef;
+		CreateNewWindow(kDocumentWindowClass, kWindowStandardFloatingAttributes | kWindowCompositingAttribute | kWindowStandardHandlerAttribute, &contentRect, &windowRef);
+		HIViewRef contentView = 0;
+		GetRootControl(windowRef, &contentView);
 		
-	#if defined(Q_WS_X11)
+		_effect->dispatcher(_effect,effEditOpen, 0, 0, (void*)windowRef, 0.0f);
+		
+		ShowWindow(windowRef);
+#endif // defined(FOR_MACOSX)
+
+
+#if defined(Q_WS_X11)
+		void *ptr = (void *) winId();
+                long value = (long) m_pDisplay;
+                _effect->dispatcher(_effect, effEditOpen, 0, value, ptr, 0.0f);
 		m_wVstEditor = getXChildWindow(m_pDisplay, (Window) winId());
 		if (m_wVstEditor)
 			m_pVstEventProc = getXEventProc(m_pDisplay, m_wVstEditor);
-	#endif
+#endif
 
 		g_vstEditors.append(this);
 
@@ -237,19 +264,23 @@
 
                // this is the same as m_pVstPlugin->idleEditor()
                _effect->dispatcher(_effect, effEditIdle, 0, 0, NULL, 0.0f);
+#if !defined(FOR_MACOSX)
                 show();
                 update();
+#endif
 
-  _is_open=true;
+                _is_open=true;
 
 	}
 
 	// Close the editor widget.
 	void close()
 	{
-  printf("Close()\n");
-		QWidget::close();
+                printf("Close()\n");
 
+#if !defined(FOR_MACOSX)
+		QWidget::close();
+#endif
 		if (_effect && _is_open) {
                         _effect->dispatcher(_effect,effEditClose, 0, 0, NULL, 0.0f);
 		//	m_pVstPlugin->setEditorVisible(false);
@@ -260,9 +291,16 @@
 		if (iIndex >= 0)
 			g_vstEditors.removeAt(iIndex);
 
-  _is_open=false;
+                _is_open=false;
 	}
 
+#if 0
+  bool macEvent ( EventHandlerCallRef caller, EventRef event ){
+    printf("got mac event\n");
+    return false;
+  }
+#endif
+
 #if defined(Q_WS_X11)
 
 	// Local X11 event filter.
@@ -300,6 +338,7 @@
   */
 
 protected:
+#if !defined(FOR_MACOSX)
 
 	// Visibility event handlers.
 	void showEvent(QShowEvent *pShowEvent)
@@ -333,6 +372,7 @@
 		}
 	#endif
 	}
+#endif // !defined(FOR_MACOSX)
 
 private:
 
@@ -344,7 +384,7 @@
 	bool       m_bButtonPress;
 #endif
 
-  AEffect *_effect;
+        AEffect *_effect;
 };
 
 } // namespace vst
@@ -696,7 +736,7 @@
 
 static void add_midi_event(struct SoundPlugin *plugin,int time,int val1, int val2, int val3){
   Data *data = (Data*)plugin->data;
-  struct VstEvents *events=data->events;
+  VstEvents *events=data->events;
   
   if(events->numEvents==MAX_EVENTS){
     fprintf(stderr,"Error, too many vst midi events at once. Skipping.\n");
@@ -704,7 +744,7 @@
   }
 
   {
-    struct VstMidiEvent *pevent=(struct VstMidiEvent*)events->events[events->numEvents];
+    VstMidiEvent *pevent=(VstMidiEvent*)events->events[events->numEvents];
     events->numEvents++;
     
     //  printf("note: %d\n",note);
@@ -841,13 +881,15 @@
 
   AEffect *aeffect = type_data->get_plugin_instance(VSTS_audioMaster);
   if (aeffect == NULL){
+    GFX_Message("Loading VST plugin %s failed",plugin_type->name);
     fprintf(stderr,"nope2\n");
-    abort();
+    //abort();
     return NULL;
   }
   if (aeffect->magic != kEffectMagic){
+    GFX_Message("Loading VST plugin %s failed. It doesnt seem to be a VST plugin...",plugin_type->name);
     fprintf(stderr,"nope3\n");
-    abort();
+    //abort();
     return NULL;
   }
 
@@ -875,9 +917,9 @@
   data->editor_widget = editor_widget;
   data->sample_rate = sample_rate;
 
-  data->events = (struct VstEvents*)calloc(1,sizeof(struct VstEvents) + (MAX_EVENTS*sizeof(struct VstMidiEvent*)));
+  data->events = (VstEvents*)calloc(1,sizeof(VstEvents) + (MAX_EVENTS*sizeof(VstMidiEvent*)));
   for(int i=0;i<MAX_EVENTS;i++)
-    data->events->events[i] = (struct VstEvent*)&data->midi_events[i];
+    data->events->events[i] = (VstEvent*)&data->midi_events[i];
 
   aeffect->dispatcher(aeffect, effMainsChanged, 0, 1, NULL, 0.0f);
 
@@ -939,7 +981,9 @@
     type_data->get_plugin_instance = get_plugin_instance;
 
     QString basename = file_info.fileName();
+#if !defined(FOR_MACOSX)
     basename.resize(basename.size()-strlen(VST_SUFFIX)-1);
+#endif
 
     plugin_type->type_name = "VST";
     plugin_type->name      = strdup(basename.ascii());
@@ -971,23 +1015,29 @@
 
 void create_vst_plugins(void){
 
-#if 0
-  {
-    QDir dir("/home/kjetil/vst/");
+#if defined(FOR_MACOSX)
+  QDir dir("/Library/Audio/Plug-Ins/VST/");
+
+  //Digits.vst/Contents/MacOS/Digits 
+
+  dir.setFilter(QDir::Dirs | QDir::NoDotAndDotDot);
+  dir.setSorting(QDir::Name);
+  QFileInfoList list = dir.entryInfoList();
+  for (int i = 0; i < list.size(); ++i) {
+    QFileInfo fileInfo = list.at(i);
+    QDir dir(fileInfo.absoluteFilePath() + "/Contents/MacOS/");
     dir.setFilter(QDir::Files | QDir::NoDotAndDotDot);
     dir.setSorting(QDir::Name);
     
     QFileInfoList list = dir.entryInfoList();
     for (int i = 0; i < list.size(); ++i) {
       QFileInfo fileInfo = list.at(i);
-      if(fileInfo.suffix()==VST_SUFFIX)
-        add_vst_plugin_type(fileInfo);
+      add_vst_plugin_type(fileInfo);
     }
-
-    PR_add_menu_entry(PluginMenuEntry::separator());
   }
-#endif
 
+
+#else // defined(FOR_MACOSX)
   int num_paths = SETTINGS_read_int("num_vst_paths", 0);
 
   for(int i=0;i<num_paths; i++){
@@ -1005,9 +1055,10 @@
       if(fileInfo.suffix()==VST_SUFFIX)
         add_vst_plugin_type(fileInfo);
     }
-
+    
     PR_add_menu_entry(PluginMenuEntry::separator());
   }    
+#endif // defined(FOR_MACOSX)
 }
 
 
diff -ru radium-1.9.2/audio/VST_plugins_proc.h radium-master/audio/VST_plugins_proc.h
--- radium-1.9.2/audio/VST_plugins_proc.h	2012-11-12 16:08:58.000000000 +0100
+++ radium-master/audio/VST_plugins_proc.h	2012-11-14 10:07:22.000000000 +0100
@@ -20,7 +20,7 @@
 #endif
 
 #if defined(FOR_MACOSX)
-#  define VST_SUFFIX "dylib"
+#  define VST_SUFFIX ""
 #endif
 
 #if defined(FOR_WINDOWS)
diff -ru radium-1.9.2/common/mouse_temponodeborder.c radium-master/common/mouse_temponodeborder.c
--- radium-1.9.2/common/mouse_temponodeborder.c	2012-11-12 16:08:58.000000000 +0100
+++ radium-master/common/mouse_temponodeborder.c	2012-11-14 10:07:22.000000000 +0100
@@ -42,28 +42,32 @@
 ){
 	struct WBlocks *wblock=window->wblock;
 	struct WTracks *wtrack2;
-	int oldwidth;
 	NInt oldrighttrack;
 
 //	PlayStop();
 
 	x-=window->prevaction.eint1;
 
-	oldwidth=wblock->temponodearea.width;
+	int old_width=wblock->temponodearea.width;
 	oldrighttrack=wblock->right_track;
 
+        struct WTracks *leftmost_track = ListFindElement1(&wblock->wtracks->l,wblock->left_track);
+        //int max_x2 = R_MAX(wblock->t.x2-window->fontwidth*10, leftmost_track->x2 - 5);
+        //printf("max_x2: %d, leftmost_track->x2-5: %d\n",max_x2,leftmost_track->x2-5);
+
 	x=R_BOUNDARIES(wblock->temponodearea.x+3, x, wblock->t.x2-window->fontwidth*10);
 
-	wblock->temponodearea.width=x - wblock->temponodearea.x;
+        int new_width = x - wblock->temponodearea.x;
+        if(old_width == new_width)
+          return 0;
+
+        int change = new_width - old_width;
+        //printf("Change: %d, leftmost->x2: %d, wblock->t.x2: %d\n",change,leftmost_track->x2,wblock->t.x2);
+        if(leftmost_track->x2 + change >= wblock->t.x2)
+          return 0;
+
+	wblock->temponodearea.width = new_width;
 
-	if(oldwidth==wblock->temponodearea.width){
-	  /*
-	  if(window->prevaction.action==NOACTION){
-	    DrawUpTrackerWindow(window);
-	  }
-	  */
-	  return 0;
-	}
 
 	//	UpdateWTempoNodes(window,wblock);
 
@@ -71,7 +75,7 @@
 	//	  DrawUpTrackerWindow(window);
 	//	}else{
 	  //	  UpdateTrackerWindow(window);
-	  GFX_BitBlt(window,wblock->temponodearea.width-oldwidth,0,
+	  GFX_BitBlt(window,wblock->temponodearea.width-old_width,0,
 		       wblock->temponodearea.x2-2,wblock->a.y1,
 		       wblock->a.x2,wblock->t.y2
 		       );
@@ -86,7 +90,7 @@
 	  DrawUpWTempoNodes(window,wblock);
 	  //	  Blt_blt(window);
 
-	  if(oldwidth>wblock->temponodearea.width){
+	  if(old_width>wblock->temponodearea.width){
 	    wtrack2=ListFindElement1(&wblock->wtracks->l,oldrighttrack);
 	    while(wtrack2!=NULL && wtrack2->l.num<=wblock->right_track){
 	      DrawUpWTrack(window,wblock,wtrack2);
diff -ru radium-1.9.2/common/mouse_wtrackborder.c radium-master/common/mouse_wtrackborder.c
--- radium-1.9.2/common/mouse_wtrackborder.c	2012-11-12 16:08:58.000000000 +0100
+++ radium-master/common/mouse_wtrackborder.c	2012-11-14 10:07:22.000000000 +0100
@@ -63,6 +63,7 @@
 	if(oldfxwidth==wtrack->fxwidth && window->prevaction.action!=NOACTION){
 	  return 0;
 	}
+
 	GFX_BitBlt(window,wtrack->fxwidth-oldfxwidth,0,
 		     wtrack->fxarea.x2-2,wblock->a.y1,
 		     wblock->a.x2,wblock->t.y2
diff -ru radium-1.9.2/Makefile.Qt radium-master/Makefile.Qt
--- radium-1.9.2/Makefile.Qt	2012-11-12 16:08:58.000000000 +0100
+++ radium-master/Makefile.Qt	2012-11-14 10:07:22.000000000 +0100
@@ -70,7 +70,11 @@
 CCC ?= g++
 CC ?= gcc
 LINKER ?= g++
+
+# Note, in case you want to change this variable, beware that the include files in audio/faudiostream are copied from Faust 0.9.55.
 FAUST ?= /home/kjetil/faudiostream/compiler/faust
+
+
 JACKOPT ?=
 LRDFOPT ?= `$(PKG) --cflags lrdf`
 SNDFILEOPT ?= `$(PKG) --cflags sndfile`
@@ -269,7 +273,7 @@
 	chmod -R a+rx $(DESTDIR)$(libdir)/radium/*
 
 	echo "#!/bin/sh" >$(DESTDIR)$(bindir)/radium
-	echo "cd " $(DESTDIR)$(libdir)/radium >>$(DESTDIR)$(bindir)/radium
+	echo "cd " $(libdir)/radium >>$(DESTDIR)$(bindir)/radium
 	echo "./radium" >>$(DESTDIR)$(bindir)/radium
 
 	chmod a+rx $(DESTDIR)$(bindir)/radium
@@ -288,7 +292,7 @@
 	./build_linux.sh -j7 && rm memory.o && cd bin && valgrind --suppressions=../valgrind-python.supp --suppressions=../Qt47supp.txt --tool=memcheck --leak-check=no --read-var-info=yes --track-origins=yes --fair-sched=yes ./radium
 # --dont-load-new-song
 #	make -j3 && cd bin && valgrind gdb --args $(PYTHONEXE) start.py keybindings.conf
-	killall -9 X11_Qtstuff.py radium
+#	killall -9 X11_Qtstuff.py radium
 
 # --tool=memcheck --read-var-info=yes --track-origins=yes
 
diff -ru radium-1.9.2/Qt/EditorWidget.h radium-master/Qt/EditorWidget.h
--- radium-1.9.2/Qt/EditorWidget.h	2012-11-12 16:08:58.000000000 +0100
+++ radium-master/Qt/EditorWidget.h	2012-11-14 10:07:22.000000000 +0100
@@ -78,7 +78,7 @@
   ~EditorWidget();
 
 #if USE_QT_VISUAL && USE_QT4
-  const QPaintEngine* paintEngine();
+  //const QPaintEngine* paintEngine();
 #endif
 
     QColor     colors[16];				// color array
diff -ru radium-1.9.2/Qt/qt4_instruments_widget.ui radium-master/Qt/qt4_instruments_widget.ui
--- radium-1.9.2/Qt/qt4_instruments_widget.ui	2012-11-12 16:08:58.000000000 +0100
+++ radium-master/Qt/qt4_instruments_widget.ui	2012-11-14 10:07:22.000000000 +0100
@@ -32,7 +32,7 @@
    <item row="0" column="1">
     <widget class="QStackedWidget" name="tabs">
      <property name="sizePolicy">
-      <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
+      <sizepolicy hsizetype="Expanding" vsizetype="MinimumExpanding">
        <horstretch>0</horstretch>
        <verstretch>0</verstretch>
       </sizepolicy>
@@ -43,7 +43,7 @@
      <property name="styleSheet">
       <string notr="true"/>
      </property>
-     <widget class="QWidget" name="tabsPage1" native="true"/>
+     <widget class="QWidget" name="tabsPage1"/>
     </widget>
    </item>
   </layout>
diff -ru radium-1.9.2/Qt/Qt_EventReceiver.cpp radium-master/Qt/Qt_EventReceiver.cpp
--- radium-1.9.2/Qt/Qt_EventReceiver.cpp	2012-11-12 16:08:58.000000000 +0100
+++ radium-master/Qt/Qt_EventReceiver.cpp	2012-11-14 10:07:22.000000000 +0100
@@ -84,7 +84,7 @@
 
 
 #if USE_QT_VISUAL && USE_QT4
-#if 1
+#if 0
 const QPaintEngine* EditorWidget::paintEngine(){     
   //qDebug()<<"Paint Engine";
   return NULL;
diff -ru radium-1.9.2/Qt/Qt_instruments.cpp radium-master/Qt/Qt_instruments.cpp
--- radium-1.9.2/Qt/Qt_instruments.cpp	2012-11-12 16:08:58.000000000 +0100
+++ radium-master/Qt/Qt_instruments.cpp	2012-11-14 10:07:22.000000000 +0100
@@ -366,6 +366,12 @@
 static Audio_instrument_widget *create_audio_instrument_widget(struct Patch *patch){
   Audio_instrument_widget *instrument = new Audio_instrument_widget(NULL,patch);
 
+  fprintf(stderr,"instrument: %p, patch: %p\n",instrument,patch);
+  if(instrument==NULL){
+    fprintf(stderr,"instrument==NULL\n");
+    return NULL;
+  }
+
   instrument->_patch_widget->name_widget->setText(patch->name);
 
   //instruments_widget->tabs->insertTab(instrument, QString::fromLatin1(patch->name), instruments_widget->tabs->count());
@@ -545,7 +551,9 @@
       Undo_MixerConnections_CurrPos();
 
       plugin = MW_add_plugin(plugin_type, x, y);
-      
+      if(plugin==NULL)
+        return NULL;
+
       char patchname[200];
       if(name!=NULL)
         snprintf(patchname,198,"%s",name);
@@ -888,10 +896,13 @@
 
 
 void OS_VST_config(struct Tracker_Windows *window){
+#if defined(FOR_MACOSX)
+  GFX_Message("No VST options to edit on OSX");
+#else
   //EditorWidget *editor=(EditorWidget *)window->os_visual.widget;
   Vst_paths_widget *vst_paths_widget=new Vst_paths_widget(NULL); // I'm not quite sure i it's safe to make this one static. It seems to work, but shouldn't the dialog be deleted when destroying the window? Not having it static is at least safe, although it might leak some memory.
   vst_paths_widget->show();
-  
+#endif  
   printf("Ohjea\n");
 }
 
diff -ru radium-1.9.2/Qt/Qt_instruments_widget_callbacks.h radium-master/Qt/Qt_instruments_widget_callbacks.h
--- radium-1.9.2/Qt/Qt_instruments_widget_callbacks.h	2012-11-12 16:08:58.000000000 +0100
+++ radium-master/Qt/Qt_instruments_widget_callbacks.h	2012-11-14 10:07:22.000000000 +0100
@@ -9,6 +9,7 @@
   {
     setupUi(this);
     //tabs->tabBar()->hide();
+    //resize(width(),30);
   }
 
 public slots:
diff -ru radium-1.9.2/Qt/Qt_Main.cpp radium-master/Qt/Qt_Main.cpp
--- radium-1.9.2/Qt/Qt_Main.cpp	2012-11-12 16:08:58.000000000 +0100
+++ radium-master/Qt/Qt_Main.cpp	2012-11-14 10:07:22.000000000 +0100
@@ -353,7 +353,7 @@
 #if 1
     if(override_default_qt_style){
       //QApplication::setStyle( new QOxygenStyle());
-      QApplication::setStyle( new QPlastiqueStyle());
+    QApplication::setStyle( new QPlastiqueStyle());
     //QApplication::setStyle( new QCleanlooksStyle() );
     //QApplication::setStyle( new QWindowsStyle() );
     }
@@ -544,9 +544,12 @@
     //exit(0);
   }
 
-  // Create application here in order to get default style. (not recommended, but can't find another way)
-  qapplication=new MyApplication(argc,argv);
-  g_qapplication = qapplication;
+  QApplication::setDesktopSettingsAware(false);
+
+    // Create application here in order to get default style. (not recommended, but can't find another way)
+    qapplication=new MyApplication(argc,argv);
+    g_qapplication = qapplication;
+
 
   {
 #if 0
@@ -572,22 +575,30 @@
 
     QFontDatabase::addApplicationFont("fonts/LiberationMono-Bold.ttf");
     QFontDatabase::addApplicationFont("fonts/VeraMono.ttf");
+    QFontDatabase::addApplicationFont("fonts/NimbusSansL.ttf");
+
 
     //QApplication::setFont(QFont("Lohit-Tamil",8));
     //QApplication::setFont(QFont("Nimbus Sans L",8));
     //QApplication::setFont(QFont("Liberation Sans L",8));
 
-    printf("System font name: \"%s\". Size: %d\n",QApplication::font().family().ascii(),QApplication::font().pointSize());
+    //printf("System font name: \"%s\". Size: %d\n",QApplication::font().family().ascii(),QApplication::font().pointSize());
 
     int system_font_size = SETTINGS_read_int((char*)"system_font_size",-1);
     if(system_font_size>=0){
-      //QFont font=QFont(QApplication::font().family(),system_font_size);
+#if 0 //defined(FOR_MACOSX)
+      QFont font=QFont(QApplication::font().family(),system_font_size);
+#else
       QFont font=QFont("Nimbus Sans L",system_font_size);
+#endif
+      //QFont font=QFont("Nimbus Sans L",10);
+      //font.setPointSize(system_font_size);
       //QFont font=QFont("Bitstream Vera Sans Mono",system_font_size);
       QApplication::setFont(font);
     }
   }
 
+
   signal(SIGINT,finish);
 
 #if GTK_IS_USED
diff -ru radium-1.9.2/Qt/Qt_Menues.cpp radium-master/Qt/Qt_Menues.cpp
--- radium-1.9.2/Qt/Qt_Menues.cpp	2012-11-12 16:08:58.000000000 +0100
+++ radium-master/Qt/Qt_Menues.cpp	2012-11-14 10:07:22.000000000 +0100
@@ -27,6 +27,7 @@
 
 #include "../common/nsmtracker.h"
 #include "../common/gfx_proc.h"
+#include "../common/settings_proc.h"
 #include "EditorWidget.h"
 
 #include "../api/api_requesters_proc.h"
@@ -126,8 +127,8 @@
   //QFont sansFont("Nimbus Mono L", 9);
   //QFont sansFont("WenQuanYi Zen Hei Mono",8);
   //QFont sansFont("Aurulent Sans Mono",8);
-  QFont sansFont("Bitstream Vera Sans Mono",8);
-
+  QFont sansFont("Bitstream Vera Sans Mono",SETTINGS_read_int((char*)"system_font_size",8));
+  //sansFont.setPointSize(8);
   //sansFont.setBold(true);
 
   menu->menu->setFont(sansFont);
diff -ru radium-1.9.2/Qt/Qt_MyQSlider.h radium-master/Qt/Qt_MyQSlider.h
--- radium-1.9.2/Qt/Qt_MyQSlider.h	2012-11-12 16:08:58.000000000 +0100
+++ radium-master/Qt/Qt_MyQSlider.h	2012-11-14 10:07:22.000000000 +0100
@@ -27,10 +27,14 @@
 #include "EditorWidget.h"
 
 #include "../common/instruments_proc.h"
+#include "../common/vector_proc.h"
+
 #include "../audio/undo_audio_effect_proc.h"
 #include "../audio/SoundPlugin.h"
 #include "../audio/SoundPlugin_proc.h"
 
+#include "Qt_instruments_proc.h"
+
 #include "Qt_SliderPainter_proc.h"
 
 static float scale(float x, float x1, float x2, float y1, float y2){
@@ -47,7 +51,7 @@
 struct MyQSlider;
 
 extern QVector<MyQSlider*> g_all_myqsliders;
-
+extern struct Root *root;
 
 struct MyQSlider : public QSlider{
 
@@ -115,8 +119,33 @@
       handle_mouse_event(event);
       _has_mouse = true;
 
-    }else
-      QSlider::mousePressEvent(event);
+    }else{
+      vector_t options = {0};
+      VECTOR_push_back(&options, "Reset");
+      //VECTOR_push_back(&options, "Set Value");
+
+      int command = GFX_Menu(root->song->tracker_windows, NULL, "", &options);
+
+      if(command==0 && _patch!=NULL && _patch->instrument==get_audio_instrument()){
+        SoundPlugin *plugin = (SoundPlugin*)_patch->patchdata;
+        PLUGIN_reset_one_effect(plugin,_effect_num);
+        GFX_update_instrument_widget(_patch);
+      }
+#if 0
+      else if(command==1 && _patch!=NULL && _patch->instrument==get_audio_instrument()){
+        SoundPlugin *plugin = (SoundPlugin*)_patch->patchdata;
+        char *s = GFX_GetString(root->song->tracker_windows,NULL, (char*)"new value");
+        if(s!=NULL){
+          float value = atof(s);
+          Undo_AudioEffect_CurrPos(_patch, _effect_num);
+          PLUGIN_set_effect_value(plugin,-1,_effect_num,value,PLUGIN_STORED_TYPE,PLUGIN_STORE_VALUE);
+          GFX_update_instrument_widget(_patch);
+        }
+      }
+#endif
+
+      event->accept();
+    }
   }
 
   void mouseMoveEvent ( QMouseEvent * event )
diff -ru radium-1.9.2/Qt/Qt_SliderPainter.cpp radium-master/Qt/Qt_SliderPainter.cpp
--- radium-1.9.2/Qt/Qt_SliderPainter.cpp	2012-11-12 16:08:58.000000000 +0100
+++ radium-master/Qt/Qt_SliderPainter.cpp	2012-11-14 10:07:22.000000000 +0100
@@ -533,7 +533,7 @@
       p->drawRect(0,0,width(),height());
     }
 
-    QRect rect(5,0,width(),height());
+    QRect rect(5,5,width()-5,height()-5);
 
     if(_display_string!=""){
       if(isEnabled()){
